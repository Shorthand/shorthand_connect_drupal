<?php

/**
 * @file
 * Shorthand module .install file.
 */

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\shorthand\Entity\ShorthandStory;

/**
 * Implements hook_uninstall().
 */
function shorthand_uninstall() {
  // Delete config settings.
  \Drupal::configFactory()
    ->getEditable('shorthand.settings')
    ->delete();

  // Existing stories deletion is already handled by the module uninstaller, so
  // remove just the files/shorthand folder, if exists.
  \Drupal::service('file_system')
    ->deleteRecursive('public://' . ShorthandStory::SHORTHAND_STORY_BASE_PATH);
}

/**
 * Convert settings to config.
 */
function shorthand_8001(&$sandbox) {
  $settings = \Drupal::service('settings');
  $config = \Drupal::configFactory()
    ->getEditable('shorthand.settings');
  $config
    ->set('token', $settings->get('shorthand_token'))
    ->set('version', '2')
    ->set('input_format', $settings->get('shorthand_input_format'))
    ->save();
  return t('Shorthand settings have been migrated from settings.php.');
}

/**
 * Remove Version Dependancy and add extra fields.
 */
function shorthand_update_8002() {
  \Drupal::configFactory()
    ->getEditable('shorthand.settings')
    ->clear("version")
    ->save();

  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  $thumbnail = BaseFieldDefinition::create('string')
    ->setLabel(t('Thumbnail'))
    ->setDescription(t('The thumbnail URL of the Shorthand story entity.'))
    ->setRevisionable(TRUE)
    ->setSettings([
      'max_length' => 255,
      'text_processing' => 0,
    ])
    ->setDefaultValue('')
    ->setDisplayOptions('view', [
      'label' => 'above',
      'type' => 'string',
      'weight' => -4,
    ])
    ->setDisplayOptions('form', [
      'type' => 'string_textfield',
      'weight' => 3,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $definition_update_manager->installFieldStorageDefinition('thumbnail', 'shorthand_story', 'shorthand', $thumbnail);

  $authors = BaseFieldDefinition::create('string')
    ->setLabel(t('Authors'))
    ->setDescription(t('The thumbnail URL of the Shorthand story entity.'))
    ->setRevisionable(TRUE)
    ->setSettings([
      'max_length' => 255,
      'text_processing' => 0,
    ])
    ->setDefaultValue('')
    ->setDisplayOptions('view', [
      'label' => 'above',
      'type' => 'string',
      'weight' => -4,
    ])
    ->setDisplayOptions('form', [
      'type' => 'string_textfield',
      'weight' => 3,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $definition_update_manager->installFieldStorageDefinition('authors', 'shorthand_story', 'shorthand', $authors);

  $keywords = BaseFieldDefinition::create('string')
    ->setLabel(t('Keywords'))
    ->setDescription(t('The thumbnail URL of the Shorthand story entity.'))
    ->setRevisionable(TRUE)
    ->setSettings([
      'max_length' => 255,
      'text_processing' => 0,
    ])
    ->setDefaultValue('')
    ->setDisplayOptions('view', [
      'label' => 'above',
      'type' => 'string',
      'weight' => -4,
    ])
    ->setDisplayOptions('form', [
      'type' => 'string_textfield',
      'weight' => 3,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $definition_update_manager->installFieldStorageDefinition('keywords', 'shorthand_story', 'shorthand', $keywords);

  $description = BaseFieldDefinition::create('string')
    ->setLabel(t('Description'))
    ->setDescription(t('The thumbnail URL of the Shorthand story entity.'))
    ->setRevisionable(TRUE)
    ->setSettings([
      'max_length' => 255,
      'text_processing' => 0,
    ])
    ->setDefaultValue('')
    ->setDisplayOptions('view', [
      'label' => 'above',
      'type' => 'string',
      'weight' => -4,
    ])
    ->setDisplayOptions('form', [
      'type' => 'string_textfield',
      'weight' => 4,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $definition_update_manager->installFieldStorageDefinition('description', 'shorthand_story', 'shorthand', $description);

  $external_url = BaseFieldDefinition::create('string')
    ->setLabel(t('Externally Published URL'))
    ->setDescription(t('The thumbnail URL of the Shorthand story entity.'))
    ->setRevisionable(TRUE)
    ->setSettings([
      'max_length' => 255,
      'text_processing' => 0,
    ])
    ->setDefaultValue('')
    ->setDisplayOptions('view', [
      'label' => 'above',
      'type' => 'string',
      'weight' => -4,
    ])
    ->setDisplayOptions('form', [
      'type' => 'string_textfield',
      'weight' => 4,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $definition_update_manager->installFieldStorageDefinition('external_url', 'shorthand_story', 'shorthand', $external_url);

  return t('Shorthand settings updated.');
}

/**
 * Add field for external asset hosting - boolean.
 */
function shorthand_update_8003() {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  $external_assets = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Use externally hosted assets.'))
    ->setDescription(t('If true, stories brought into Drupal will use externally hosted assets instead of self-hosting.'))
    ->setRevisionable(TRUE)
    ->setTranslatable(TRUE)
    ->setDisplayOptions('view', [
      'settings' => [
        'format' => 'unicode-yes-no',
      ],
      'weight' => 1,
    ])
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'weight' => 1,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $definition_update_manager->installFieldStorageDefinition('external_url', 'shorthand_story', 'shorthand', $external_assets);

  $external_publishing_config = BaseFieldDefinition::create('string')
    ->setLabel(t('Publishing Configuration'))
    ->setDescription(t('The publishing configuration to use for assets.'))
    ->setRevisionable(TRUE)
    ->setSettings([
      'max_length' => 255,
      'text_processing' => 0,
    ])
    ->setDefaultValue('')
    ->setDisplayOptions('view', [
      'label' => 'above',
      'type' => 'string',
      'weight' => 1,
    ])
    ->setDisplayOptions('form', [
      'type' => 'string_textfield',
      'weight' => 1,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $definition_update_manager->installFieldStorageDefinition('external_publishing_config', 'shorthand_story', 'shorthand', $external_publishing_config);

}

/**
 * Move shorthand token to different property.
 */
function shorthand_update_9001() {
  $config = \Drupal::configFactory()
    ->getEditable('shorthand.settings');

  $config
    ->set('shorthand_token', $config->get('token'))
    ->save();
}
