<?php

/**
 * @file
 * Contains shorthand.module.
 */

use Drupal\Core\Render\Markup;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\shorthand\Entity\ShorthandStoryInterface;

/**
 * Implements hook_help().
 */
function shorthand_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the shorthand module.
    case 'help.page.shorthand':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('A module that allows the publishing of Shorthand stories directly to Drupal.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function shorthand_preprocess_html(&$variables) {
  if (
    ($story = \Drupal::routeMatch()->getParameter('shorthand_story')) &&
    ($story instanceof ShorthandStoryInterface)
  ) {
    $files_url = file_create_url($story->getShorthandStoryFilesStorageUri());
    $node_url = $story->toUrl()->setAbsolute()->toString();
    $html_head = $story->get('head')->value;
    if (strpos($html_head, 'amphtml') !== FALSE) {
      // Replace AMP url if present.
      $amp_url = $files_url;
      $amp_url .= '/amp-index.html';
      $new_amp_link = "<link rel=\"amphtml\" href=\"$amp_url\">";
      $html_head = preg_replace('/<link.*rel="amphtml"(.[^>]*>)/i', $new_amp_link, $html_head);
    }

    if (strpos($html_head, 'og:url') !== FALSE) {
      // Replace og:url url if present.
      $new_og_url = "<meta property=\"og:url\" content=\"$node_url\">";
      $html_head = preg_replace('/<meta.*property="og:url"(.[^>]*>)/i', $new_og_url, $html_head);
    }

    if (strpos($html_head, 'og:image') !== FALSE) {
      // Replace og:image url if present.
      $new_og_image = '<meta property="og:image" content="' . $files_url . '/assets';
      $html_head = preg_replace('/<meta.*property="og:image".*assets/i', $new_og_image, $html_head);
    }

    if (strpos($html_head, 'twitter:image') !== FALSE) {
      // Replace twitter:image url if present.
      $new_twitter_image = '<meta name="twitter:image" content="' . $files_url . '/assets';
      $html_head = preg_replace('/<meta.*name="twitter:image".*assets/i', $new_twitter_image, $html_head);
    }

    $variables['#attached']['html_head'][] = [
      [
        '#type' => 'markup',
        '#markup' => Markup::create($html_head),
        '#cache' => [
          'contexts' => ['url.path'],
          'tags' => $story->getCacheTags(),
        ],
      ],
      'shorthand_story_head',
    ];
  }
}
