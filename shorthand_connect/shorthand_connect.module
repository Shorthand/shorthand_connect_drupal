<?php

$included = @include_once('config.php');
if (!$included) {
	require_once('config.default.php');
}

require_once('includes/api.php');
require_once('includes/help.php');
require_once('includes/settings.php');

/**
 * Implements hook_menu().
 */
function shorthand_connect_menu() {
  $items = array();
  $items['admin/config/content/shorthand_connect'] = array(
    'title' => 'Current posts',
    'description' => 'Configuration for Shorthand Connect module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shorthand_connect_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function shorthand_connect_field_widget_info() {
  return array(
    'shorthand_story_select' => array(
       'label' => 'Shorthand stories selection',
       'field types' => array('text'),
       'settings' => array(
          'size' => '60'
        ),
       'behaviors' => array(
         'multiple values' => FIELD_BEHAVIOR_DEFAULT
        )
    )
  );
}

function shorthand_connect_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {

  $value = isset($items[$delta]['value']) ? $items[$delta]['value'] : '';
  $widget = $element;
  $widget['#delta'] = $delta;

  switch($instance['widget']['type']) {
    case 'shorthand_story_select':
      $data['serverURL'] = variable_get('sh_server_url', '');
      $data['stories'] = sh_get_stories();

      $widget += array(
        '#type' => 'textfield',
        '#default_value' => $value,
        '#size' => 10,
        '#maxlength' => 10,
        '#attached' => array(
          'css' => array(drupal_get_path('module', 'shorthand_connect') . '/field_widget_form.css'),
          'js' => array(drupal_get_path('module', 'shorthand_connect') . '/field_widget_form.js')
        ),
        '#suffix' => '<script>var shStoryData='.json_encode($data).';</script>',
      );
      break;
  }
  $element['value'] = $widget;
  return $element;
}

function shorthand_connect_node_insert($node) {
  update_node_data($node);
}

function shorthand_connect_node_update($node) {
  update_node_data($node);
}

function update_node_data($node) {
  if (isset($node->shorthand_story_id)) {
    $node->original = isset($node->original) ? $node->original : NULL;
    $shorthand_id = $node->shorthand_story_id[$node->language][0]['value'];
    $node_id = $node->uid;
    $story = sh_copy_story($node_id, $shorthand_id);
    $head = fix_content_paths($story['url'], file_get_contents($story['path'].'/component_head.html'));
    $node->shorthand_story_head[$node->language][0]['value'] = $head;
    $body = fix_content_paths($story['url'], file_get_contents($story['path'].'/component_article.html'));
    $node->shorthand_story_body[$node->language][0]['value'] = $body;
    field_attach_update('node', $node);
  }
}

function fix_content_paths($assets_path, $content) {
  $content = str_replace('./static/', $assets_path.'/static/', $content);
  $content = str_replace('./media/', $assets_path.'/media/', $content);
  return $content;
}

/**
 * Implements hook_theme().
 */
function shorthand_connect_theme($existing, $type, $theme, $path) {
  return array(
    'node__shorthand_story' => array(
      'render element' => 'form',
      'template' => 'shorthand_story_node',
      // this will set to module/theme path by default:
      'path' => drupal_get_path('module', 'shorthand_connect'),
    ),
  );
}

// /**
//  * Preprocessor for theme('article_node_form').
//  */
// function template_preprocess_shorthand_story_node_form(&$variables) {

//   $variables['shorthand'] = array();

//   $variables['shorthand']['stories'] = sh_get_stories();

//   // nodeformcols is an alternative for this solution.
//   if (!module_exists('nodeformcols')) {

//     $variables['sidebar'] = array();   // Put taxonomy fields in sidebar.

//     //$variables['sidebar'][] = $variables['form']['field_tags'];
//     //hide($variables['form']['field_tags']);

//     // Extract the form buttons, and put them in independent variable.
//     $variables['buttons'] = $variables['form']['actions'];
//     hide($variables['form']['actions']);
//   }
// }
